name: Flutter CI/CD with Release

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: write   # importante para criar releases e tags

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.35.2'
          channel: 'stable'

      - name: Flutter Pub Get
        run: flutter pub get

      - name: Build APK
        run: flutter build apk --release

      - name: Build AAB
        run: flutter build appbundle --release

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-release-apk
          path: build/app/outputs/flutter-apk/app-release.apk

      - name: Upload AAB artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-release-aab
          path: build/app/outputs/bundle/release/app-release.aab

  release:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - uses: actions/checkout@v4

      - name: Download APK artifact
        uses: actions/download-artifact@v4
        with:
          name: app-release-apk
          path: build/app/outputs/flutter-apk/

      - name: Download AAB artifact
        uses: actions/download-artifact@v4
        with:
          name: app-release-aab
          path: build/app/outputs/bundle/release/

      - name: Get release version
        id: version
        run: |
          VERSION="v$(grep '^version:' pubspec.yaml | cut -d ' ' -f2 | cut -d '+' -f1)"
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Delete existing release if exists
        run: |
          gh release delete "$VERSION" -y || true
          git push --delete origin "$VERSION" || true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create GitHub Release
        run: |
          gh release create "$VERSION" \
            --title "Release $VERSION" \
            --notes "Build autom√°tico gerado pelo GitHub Actions" \
            build/app/outputs/flutter-apk/app-release.apk \
            build/app/outputs/bundle/release/app-release.aab
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Remove the separate upload steps since the files are already included in the release creation
      # - name: Upload APK to release
      #   run: gh release upload "$VERSION" build/app/outputs/flutter-apk/app-release.apk
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # - name: Upload AAB to release
      #   run: gh release upload "$VERSION" build/app/outputs/bundle/release/app-release.aab
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
